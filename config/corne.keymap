/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {  // layer 1
// -----------------------------------------------------------------------------------------
// |      |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |      |
// |      |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  '  |      |
// |      |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  ;  |      |
//                    | ESC | SPC | TAB |   | ENT | BSPC  | DEL |
                        bindings = <
   &none  &kp Q       &kp W       &kp E        &kp R         &kp T      &kp Y       &kp U        &kp I        &kp O       &kp P         &none
   &none  &mt LGUI A  &mt LALT S  &mt LCTRL D  &mt LSHFT F   &kp G      &kp H       &mt RSHFT J  &mt RCTRL K  &mt RALT L  &mt RGUI SQT  &none
   &none  &kp Z       &kp X       &kp C        &kp V         &kp B      &kp N       &kp M        &kp COMMA    &kp DOT     &kp SEMI      &none
                      &kp ESC     &kp SPACE    &kp TAB       &lt 2 RET  &lt 1 BSPC  &kp DEL
                        >;
                };
                number_layer { // layer 1
// -----------------------------------------------------------------------------------------
// |      |  /  |  7  |  8  |  9  |  -  |   |     |     |     |     |     |      |
// |      |  *  |  4  |  5  |  6  |  +  |   |LSHFT|LCTRL|LALT |LGUI |     |      |
// |      |  :  |  1  |  2  |  3  |  =  |   |     |     |     |     |     |      |
//                    |  $  |  0  |  .  |   |     |     |     |
                        bindings = <
   &none &kp KP_DIVIDE   &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS  &none  &none      &none      &none     &none     &none
   &none &kp KP_MULTIPLY &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS   &none  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &none
   &none &kp COLON       &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp EQUAL     &none  &none      &none      &none     &none     &none
                                    &kp DLLR   &kp KP_N0  &kp KP_DOT    &none  &trans     &none
                        >;
                };
                symbol_layer { // layer 2
// -----------------------------------------------------------------------------------------
// |      |  ^  |  \  |  |  |  {  |  }  |   |     |     |     |     |     |      |
// |      |  ~  |  #  |  @  |  [  |  ]  |   |LSHFT|LCTRL|LALT |LGUI |     |      |
// |      |  `  |  %  |  &  |  <  |  >  |   |     |     |     |     |     |      |
//                    |  (  |  )  |  _  |   |     |     |     |
                        bindings = <
   &none  &kp CARET  &kp BSLH   &kp PIPE  &kp LBRC   &kp RBRC   &none   &none      &none      &none     &none     &none
   &none  &kp TILDE  &kp HASH   &kp AT    &kp LBKT   &kp RBKT   &none   &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &none
   &none  &kp GRAVE  &kp PRCNT  &kp AMPS  &kp LT     &kp RT     &none   &none      &none      &none     &none     &none
                                &kp LPAR  &kp RPAR   &kp UNDER  &trans  &none      &none
                        >;
                };
        };
};
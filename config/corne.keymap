/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


/ {
        macros {
            desk_left: desk_left {
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings
                    = <&macro_press &kp LCTRL &kp LGUI>
                    , <&macro_tap &kp LEFT>
                    , <&macro_release &kp LCTRL &kp LGUI>
                    ;
            };
            desk_right: desk_right {
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings
                    = <&macro_press &kp RCTRL &kp RGUI>
                    , <&macro_tap &kp RIGHT>
                    , <&macro_release &kp RCTRL &kp RGUI>
                    ;
            };
        };

        behaviors {
            shft_dot: shft_dot {
                compatible = "zmk,behavior-mod-morph";
                #binding-cells = <0>;
                bindings = <&kp DOT>, <&kp EXCL>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
            };
            shft_comma: shft_comma {
                compatible = "zmk,behavior-mod-morph";
                #binding-cells = <0>;
                bindings = <&kp COMMA>, <&kp QMARK>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
            };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {  // layer 0
// -----------------------------------------------------------------------------------------
// |      |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |      |
// |  L5  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  '  |      |
// |      |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  ;  |      |
//                    | ESC | SPC | TAB |   | ENT | BSPC  | DEL |
                        bindings = <
   &none  &kp Q       &kp W       &kp E          &kp R         &kp T      &kp Y       &kp U        &kp I        &kp O       &kp P         &none
   &to 5  &mt LGUI A  &mt LALT S  &mt LCTRL D    &mt LSHFT F   &kp G      &kp H       &mt RSHFT J  &mt RCTRL K  &mt RALT L  &mt RGUI SQT  &none
   &none  &kp Z       &kp X       &kp C          &kp V         &kp B      &kp N       &kp M        &shft_comma    &shft_dot     &kp SEMI      &none
                      &kp ESC     &lt 4 SPACE    &kp TAB       &lt 2 RET  &lt 1 BSPC  &lt 3 DEL
                        >;
                };
                number_layer { // layer 1
// -----------------------------------------------------------------------------------------
// |      |  /  |  7  |  8  |  9  |  -  |   |     |     |     |     |     |      |
// |      |  *  |  4  |  5  |  6  |  +  |   |     |LSHFT|LCTRL|LALT |LGUI |      |
// |      |  :  |  1  |  2  |  3  |  =  |   |     |     |     |     |     |      |
//                    |  $  |  0  |  .  |   | L1  |     |     |
                        bindings = <
   &none &kp FSLH        &kp N7  &kp N8     &kp N9  &kp MINUS  &none  &none      &none      &none     &none     &none
   &none &kp STAR        &kp N4  &kp N5     &kp N6  &kp PLUS   &none  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &none
   &none &kp COLON       &kp N1  &kp N2     &kp N3  &kp EQUAL  &none  &none      &none      &none     &none     &none
                                 &kp DLLR   &kp N0  &kp DOT    &none  &trans     &none
                        >;
                };
                symbol_layer { // layer 2
// -----------------------------------------------------------------------------------------
// |      |  ^  |  \  |  |  |  {  |  }  |   |     |     |     |     |     |      |
// |      |  ~  |  #  |  @  |  [  |  ]  |   |     |LSHFT|LCTRL|LALT |LGUI |      |
// |      |  `  |  %  |  &  |  <  |  >  |   |     |     |     |     |     |      |
//                    |  (  |  )  |  _  |   |     | L2  |     |
                        bindings = <
   &none  &kp CARET  &kp BSLH   &kp PIPE  &kp LBRC   &kp RBRC   &none   &none      &none      &none     &none     &none
   &none  &kp TILDE  &kp HASH   &kp AT    &kp LBKT   &kp RBKT   &none   &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &none
   &none  &kp GRAVE  &kp PRCNT  &kp AMPS  &kp LT     &kp GT     &none   &none      &none      &none     &none     &none
                                &kp LPAR  &kp RPAR   &kp UNDER  &trans  &none      &none
                        >;
                };
                function_layer { // layer 3
// -----------------------------------------------------------------------------------------
// |      | F12 | F7  | F8  | F9  |PSCRN|   |     |     |     |     |     |      |
// |      | F11 | F4  | F5  | F6  |Scrol|   |     |LSHFT|LCTRL|LALT |LGUI |      |
// |      | F10 | F1  | F2  | F3  |Pause|   |     |     |     |     |     |      |
//                    | ESC | SPC | TAB |   |     |     | L3  |
                        bindings = <
   &none  &kp F12  &kp F7  &kp F8  &kp F9   &kp PSCRN        &none   &none      &none      &none     &none     &none
   &none  &kp F11  &kp F4  &kp F5  &kp F6   &kp SLCK         &none   &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &none
   &none  &kp F10  &kp F1  &kp F2  &kp F3   &kp PAUSE_BREAK  &none   &none      &none      &none     &none     &none
                           &trans  &trans   &trans           &none   &none      &trans
                        >;
                };
                navigation_layer { // layer 4
// -----------------------------------------------------------------------------------------
// |      |     |     |     |     |     |   |Redo |Paste|Copy | Cut |Undo |      |
// |      |RGUI |RALT |RCTRL|RSHFT|     |   |Caps |Left |Down | Up  |Right|      |
// |      |     |     |     |     |     |   |Insrt|Home |PgDn |PgUp | End |      |
//                    |     | L4  |     |   |Enter|BkSpc| Del |
                        bindings = <
   &none   &none     &none     &none      &none      &none   &none       &desk_left   &none           &none        &desk_right  &none
   &none   &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none   &caps_word  &kp LEFT     &kp DOWN        &kp UP       &kp RIGHT    &none
   &none   &none     &none     &none      &none      &none   &kp INS     &kp HOME     &kp PG_DN       &kp PG_UP    &kp END      &none
                               &none      &trans     &none   &trans      &trans       &trans
                        >;
                };
                mouse_layer { // layer 5
// -----------------------------------------------------------------------------------------
// |  L1  | Cmmt  | GuiW  | GuiE  | GuiR  | Enter |   |     |     |     |     |     |      |
// |      | CtrlA | CtrlS | CtrlD | CtrlF |  BSPC |   |     |LSHFT|LCTRL|LALT |LGUI |      |
// |      | CtrlZ | CtrlX | CtrlC | CtrlV |  Del  |   |     |     |     |     |     |      |
//                        |  ESC  |  SPC  |  TAB  |   |     |     |     |
                        bindings = <
   &to 0   &kp RC(FSLH)    &kp RG(W)       &kp RG(E)        &kp RG(R)        &kp RET   &none      &none      &none      &none     &none     &none
   &none   &mt LGUI RC(A)  &mt LALT RC(S)  &mt LCTRL RC(D)  &mt LSHFT RC(F)  &kp BSPC  &none      &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &none
   &none   &kp RC(Z)       &kp RC(X)       &kp RC(C)        &kp RC(V)        &kp DEL   &none      &none      &none      &none     &none     &none
                                           &trans           &trans           &trans           &trans    &trans     &trans
                        >;
                };
        };
};